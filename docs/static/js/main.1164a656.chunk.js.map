{"version":3,"sources":["bingoFacts.js","BingoGrid.js","Settings.js","App.js","serviceWorker.js","index.js"],"names":["BingoGrid","props","bingo","className","facts","map","fact","index","freeCenter","key","Settings","handleCheckChange","e","handleSettingsChange","target","name","checked","handleTitleChange","setState","title","value","state","showBingo","onChange","this","type","Component","App","toggleSettings","showSettings","currentFacts","getShuffledArray","slice","array","a","i","length","j","Math","floor","random","getNewFacts","size","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1164a656.chunk.js","sourcesContent":["export default [\n  'Brown eyes',\n  'Green eyes',\n  'Blue eyes',\n  'Is an only child',\n  'Has an older sibling',\n  'Has a younger sibling',\n  'Babysits for siblings',\n  'Knows how to swim',\n  'Was born in another country',\n  'Parents do not speak English',\n  'Speaks two languages',\n  'Has bullied someone',\n  'Has been bullied',\n  'Has a family member in jail',\n  'Has heard gun shots',\n  'Lives with only one parent',\n  'Lives with grandparents or aunts or uncles',\n  'Adopted/foster care',\n  'Has traveled out of the state',\n  'Has lived in another state',\n  'Has traveled out of the country',\n  'Has been in a fight',\n  'Knows somebody who has died from violence',\n  'Has been to 2 or more schools',\n  'Can cook food from their culture',\n  'Is afraid of flying',\n  'Wants to be an artist',\n  'Meditates regularly',\n  'Likes campfires',\n  'Has slept on a beach overnight',\n  'Can show you a magic trick',\n  'Has milked a cow',\n  'Has lived on a farm',\n  'Is a Republican',\n  'Is a Democrat',\n  'Likes the Green party',\n  'Has changed a lightbulb in the last month',\n  'Knows what \"Raku\" is',\n  'Knows what \"Futoshiki\" is',\n  'Has a grandchild who believes in Santa',\n  'Has been a camp counselor',\n  'Was suspended from school',\n  'Has been a teacher of any kind',\n  'Wishes they were ruler of the world',\n  \"Doesn't have a Facebook page\",\n  'Has been in jail',\n  'Goes to church/synagogue',\n  'Volunteers',\n  'Likes liver',\n  'Is a tree hugger',\n  'Was or still is a hippie',\n  \"Can tell you the name of Johnny Carson's sidekick\",\n  'Has won more than $1,000 in a lottery',\n  'Has been on a game show',\n  'Likes hiking in the woods',\n  'Has seen a bear in the wilderness',\n  'Has seen a moose in the wilderness',\n  'Has piloted an airplane',\n  'Has steered a motorboat',\n  'Has been waterskiing',\n  'Has gone camping completely alone',\n  'Has hitchhiked',\n  'Went to Woodstock',\n  'Admits to using a plastic couch cover',\n  'Knows who Howdy Doody was',\n  'Watched an episode of the \"Lawrence Welk\" show when it was on TV',\n  'Exercised to the \"Jack LaLanne\" show when it was on TV',\n  'Can do a sun salutation',\n  'Can play the fiddle',\n  'Still has all their original teeth',\n  'Has planted a tree',\n  'Can bake a cake from scratch',\n  'Without looking, can tell you what color socks they have on',\n  'Can tell you what they dreamed last night',\n  'Can name a character from \"Star Trek\"',\n  'Has played Pokemon',\n  \"Still likes s'mores\",\n];","import React from 'react';\n\nexport default function BingoGrid(props) {\n  return (\n    <>\n      {props.bingo ? (\n        <div className=\"bingo bingo-header\">\n          <div>B</div>\n          <div>I</div>\n          <div>N</div>\n          <div>G</div>\n          <div>O</div>\n        </div>\n      ) : (\n        ''\n      )}\n      <div className=\"bingo bingo-grid\">\n        {props.facts.map((fact, index) =>\n          index === 12 && props.freeCenter ? (\n            <li key=\"FREE\" className=\"fact free\">\n              FREE\n            </li>\n          ) : (\n            <li key={index} className=\"fact\">\n              {fact}\n            </li>\n          )\n        )}\n      </div>\n    </>\n  );\n}\n","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      freeCenter: props.freeCenter,\n      showBingo: props.showBingo,\n      title: props.title,\n    };\n  }\n\n  handleCheckChange = e => {\n    this.props.handleSettingsChange(e.target.name, e.target.checked);\n  };\n\n  handleTitleChange = e => {\n    this.setState({ title: e.target.value });\n    this.props.handleSettingsChange(e.target.name, e.target.value);\n  };\n\n  render() {\n    return (\n      <div className=\"settings\">\n        <form>\n          <div>\n            <div>\n              Title:{' '}\n              <input\n                name=\"title\"\n                onChange={this.handleTitleChange}\n                value={this.state.title}\n              ></input>\n            </div>\n            <input\n              name=\"freeCenter\"\n              type=\"checkbox\"\n              onChange={this.handleCheckChange}\n              checked={this.props.freeCenter}\n            />{' '}\n            Free Center?\n          </div>\n          <div>\n            <input\n              name=\"showBingo\"\n              type=\"checkbox\"\n              onChange={this.handleCheckChange}\n              checked={this.props.showBingo}\n            />{' '}\n            Show Bingo?\n          </div>\n          {/* <textarea name=\"allFacts\">facts go here</textarea> */}\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport facts from './bingoFacts';\nimport BingoGrid from './BingoGrid';\nimport Settings from './Settings';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentFacts: [],\n      facts,\n      freeCenter: false,\n      showBingo: true,\n      showSettings: false,\n      title: 'Welcome to Flatiron',\n    };\n  }\n\n  getNewFacts() {\n    this.setState({\n      currentFacts: this.getShuffledArray(this.state.facts).slice(0, 25),\n    });\n  }\n\n  getShuffledArray(array) {\n    const a = array.slice(0);\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n\n  componentDidMount() {\n    this.getNewFacts();\n  }\n\n  handleSettingsChange = (key, value) => {\n    this.setState({ [key]: value });\n  };\n\n  toggleSettings = () => {\n    this.setState({ showSettings: !this.state.showSettings });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <nav>\n          <h1>{this.state.title}</h1>\n          <section className=\"controls\">\n            <ion-icon\n              size=\"small\"\n              name=\"refresh\"\n              onClick={() => this.getNewFacts()}\n            ></ion-icon>\n            <ion-icon\n              size=\"small\"\n              name=\"settings\"\n              onClick={this.toggleSettings}\n            ></ion-icon>\n          </section>\n        </nav>\n        {this.state.showSettings ? (\n          <Settings\n            handleSettingsChange={this.handleSettingsChange}\n            freeCenter={this.state.freeCenter}\n            showBingo={this.state.showBingo}\n            title={this.state.title}\n          />\n        ) : (\n          ''\n        )}\n\n        {this.state.showSettings ? (\n          ''\n        ) : (\n          <BingoGrid\n            bingo={this.state.showBingo}\n            facts={this.state.currentFacts}\n            freeCenter={this.state.freeCenter}\n            title={this.state.title}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}