{"version":3,"sources":["bingoFacts.js","BingoGrid.js","Settings.js","App.js","serviceWorker.js","index.js"],"names":["BingoGrid","props","bingo","className","facts","map","fact","index","center","key","Settings","handleCheckChange","e","handleSettingsChange","target","name","checked","handleTitleChange","setState","title","value","handleFactsChange","currentFacts","split","handleCenterChange","updateFacts","state","showBingo","onChange","this","type","join","onClick","Component","App","getNewFacts","toggleSettings","showSettings","getShuffledArray","slice","array","a","i","length","j","Math","floor","random","size","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2f0f0e6.chunk.js","sourcesContent":["export default [\n  'Find the instructor who competed in guitar hero tournaments',\n  'Find the instructor who is an award-winning actor/director',\n  'Find the instructor who is a huge coffee nerd',\n  'Find someone who has lived in more than 3 states',\n  'Find someone who has lived abroad',\n  'Find someone who loves working out',\n  'Find someone who has more than one pet',\n  'Find someone with the same favorite color as you',\n  'Find someone who loves Texas summer',\n  'Find someone who doesn\\'t like chocolate',\n  'Find someone who loves sugar too much',\n  'Find someone who speaks another language',\n  'Find someone who has a roommate',\n  'Find someone who is left-handed',\n  'Find out someoneâ€™s favorite sport',\n  'Find someone who wears contact lenses',\n  'Find out someone\\'s favorite movie',\n  'Find someone who doesn\\'t eat meat',\n  'Find someone who has traveled to more than ten states',\n  'Find out what someone did over the weekend',\n  'Find out someone\\'s favorite local lunch place',\n  'Find someone whose age is a prime number',\n  'Find someone who is afraid of flying',\n  'Find someone who meditates regularly',\n  'Find someone who has slept on a beach overnight',\n  'Find someone who can show you a magic trick',\n  'Find someone who has changed a lightbulb in the last month',\n  'Find someone who can play a musical instrument',\n  'Find the youngest person in your cohort'\n];","import React from 'react';\n\nconst selfieString =\n  'Be in a full class photo and have someone Slack it to @Juliana';\n\nexport default function BingoGrid(props) {\n  return (\n    <>\n      {props.bingo ? (\n        <div className=\"bingo bingo-header\">\n          <div>B</div>\n          <div>I</div>\n          <div>N</div>\n          <div>G</div>\n          <div>O</div>\n        </div>\n      ) : (\n        ''\n      )}\n      <div className=\"bingo bingo-grid\">\n        {props.facts.map((fact, index) =>\n          index === 12 && props.center === 'free' ? (\n            <li key=\"FREE\" className=\"fact free\">\n              FREE\n            </li>\n          ) : index === 12 && props.center === 'selfie' ? (\n            <li key=\"selfie\" className=\"fact\">\n              {selfieString}\n            </li>\n          ) : (\n            <li key={index} className=\"fact\">\n              {fact}\n            </li>\n          )\n        )}\n      </div>\n    </>\n  );\n}\n","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      center: props.center,\n      currentFacts: props.facts,\n      showBingo: props.showBingo,\n      title: props.title,\n    };\n  }\n\n  handleCheckChange = e => {\n    this.props.handleSettingsChange(e.target.name, e.target.checked);\n  };\n\n  handleTitleChange = e => {\n    this.setState({ title: e.target.value });\n    this.props.handleSettingsChange(e.target.name, e.target.value);\n  };\n\n  handleFactsChange = e => {\n    this.setState({ currentFacts: e.target.value.split('\\n') });\n  };\n\n  handleCenterChange = e => {\n    this.props.handleSettingsChange(e.target.name, e.target.value);\n  };\n\n  updateFacts = e => {\n    this.props.updateFacts(this.state.currentFacts);\n  };\n\n  render() {\n    return (\n      <div className=\"settings\">\n        <form>\n          <div>\n            <div>\n              Title:{' '}\n              <input\n                name=\"title\"\n                onChange={this.handleTitleChange}\n                value={this.state.title}\n              ></input>\n            </div>\n            What's in the center?{' '}\n            <select\n              name=\"center\"\n              value={this.props.center}\n              onChange={this.handleCenterChange}\n            >\n              <option value=\"normal\">Normal</option>\n              <option value=\"free\">Free</option>\n              <option value=\"selfie\">Selfie</option>\n            </select>\n          </div>\n          <div>\n            <input\n              name=\"showBingo\"\n              type=\"checkbox\"\n              onChange={this.handleCheckChange}\n              checked={this.props.showBingo}\n            />{' '}\n            Show \"BINGO\"?\n          </div>\n          <div>\n            <textarea\n              name=\"allFacts\"\n              className=\"facts-editor\"\n              value={this.state.currentFacts.join('\\n')}\n              onChange={this.handleFactsChange}\n            ></textarea>\n          </div>\n          <input\n            type=\"button\"\n            onClick={this.updateFacts}\n            value=\"Update Facts\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport facts from './bingoFacts';\nimport BingoGrid from './BingoGrid';\nimport Settings from './Settings';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentFacts: [],\n      facts,\n      center: 'selfie',\n      showBingo: true,\n      showSettings: false,\n      title: 'Welcome to Flatiron',\n    };\n  }\n\n  getNewFacts() {\n    this.setState({\n      currentFacts: this.getShuffledArray(this.state.facts).slice(0, 25),\n    });\n  }\n\n  getShuffledArray(array) {\n    const a = array.slice(0);\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n\n  componentDidMount() {\n    this.getNewFacts();\n  }\n\n  handleSettingsChange = (key, value) => {\n    this.setState({ [key]: value });\n  };\n\n  updateFacts = facts => {\n    this.setState({ facts }, () => this.getNewFacts());\n  };\n\n  toggleSettings = () => {\n    this.setState({ showSettings: !this.state.showSettings });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <nav>\n          <h1>{this.state.title}</h1>\n          <section className=\"controls\">\n            {this.state.showSettings ? (\n              ''\n            ) : (\n              <ion-icon\n                size=\"small\"\n                name=\"refresh\"\n                onClick={() => this.getNewFacts()}\n              ></ion-icon>\n            )}\n            <ion-icon\n              size=\"small\"\n              name=\"settings\"\n              onClick={this.toggleSettings}\n            ></ion-icon>\n          </section>\n        </nav>\n        {this.state.showSettings ? (\n          <Settings\n            handleSettingsChange={this.handleSettingsChange}\n            center={this.state.center}\n            showBingo={this.state.showBingo}\n            title={this.state.title}\n            facts={this.state.facts}\n            updateFacts={this.updateFacts}\n          />\n        ) : (\n          ''\n        )}\n\n        {this.state.showSettings ? (\n          ''\n        ) : (\n          <BingoGrid\n            bingo={this.state.showBingo}\n            facts={this.state.currentFacts}\n            center={this.state.center}\n            title={this.state.title}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}